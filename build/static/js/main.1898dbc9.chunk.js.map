{"version":3,"sources":["components/Header.js","components/Work.js","components/MainContent.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","name","Work","company","role","date","details","MainContent","prop","class","src","alt","href","emailUrl","email","numberUrl","number","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wNAQeA,MANf,SAAgBC,GACZ,OACI,gCAAQ,4BAAKA,EAAMC,KAAX,eCQDC,MAVf,SAAcF,GACV,OACI,6BACI,4BAAKA,EAAMG,SACX,4BAAKH,EAAMI,KAAX,MAAoBJ,EAAMK,MAC1B,2BAAIL,EAAMM,WCuCPC,MA3Cf,SAAqBC,GACjB,OACI,8BACI,6BAASC,MAAM,iBACX,yBAAKA,MAAM,gBAAgBC,IAAI,gGAAgGC,IAAI,4CAEvI,iCACI,6CACA,iCACA,2BAAG,oCAAH,IAAiBH,EAAKP,MACtB,2BAAG,qCAAH,IAAiB,uBAAGW,KAAMJ,EAAKK,UAAWL,EAAKM,QAC/C,2BAAG,4CAAH,IAAwB,uBAAGF,KAAMJ,EAAKO,WAAYP,EAAKQ,WAK3D,iCACI,0CACA,qEAA0C,6CAI9C,iCACI,6CAEA,kBAAC,EAAD,CACIb,QAAU,cACVC,KAAO,YACPC,KAAO,sBACPC,QAAU,kYAGd,kBAAC,EAAD,CACIH,QAAU,eACVC,KAAO,YACPC,KAAO,wBACPC,QAAU,qYC/BfW,MANf,WACI,OACI,2DCqBOC,MAnBf,WACI,OACI,6BACI,kBAAC,EAAD,CACEjB,KAAO,kBAET,kBAAC,EAAD,CACEA,KAAO,gBACPa,MAAQ,oBACRD,SAAW,2BACXG,OAAS,eACTD,UAAY,qBAGd,kBAAC,EAAD,QCRQI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,qBD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1898dbc9.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header><h1>{props.name} | Resume</h1></header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nfunction Work(props) {\r\n    return(\r\n        <div>\r\n            <h3>{props.company}</h3>\r\n            <h5>{props.role} | {props.date}</h5>\r\n            <p>{props.details}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Work","import React from \"react\"\r\nimport Work from \"./Work\"\r\n\r\nfunction MainContent(prop) {\r\n    return (\r\n        <main>\r\n            <section class=\"img-container\">\r\n                <img class=\"profile-image\" src=\"https://m.media-amazon.com/images/M/MV5BMTY5NzE3NzU3MF5BMl5BanBnXkFtZTgwMjg0NTQ5MDE@._V1_.jpg\" alt=\"A picture of super smart Sally Student\" />\r\n            </section>\r\n            <section>\r\n                <h2>Contact Info:</h2>\r\n                <address>\r\n                <p><b>Name:</b> {prop.name}</p>\r\n                <p><b>Email:</b> <a href={prop.emailUrl}>{prop.email}</a></p>\r\n                <p><b>Phone Number:</b> <a href={prop.numberUrl}>{prop.number}</a></p>\r\n                </address>\r\n                \r\n            </section>\r\n            \r\n            <section>\r\n                <h2>Education:</h2>\r\n                <p>The University of Missed Curly Brace - <em>August 2015</em></p>\r\n                \r\n            </section>\r\n\r\n            <section>\r\n                <h2>Work History:</h2>\r\n                \r\n                <Work \r\n                    company = \"The Docotor\"\r\n                    role = \"Companion\"\r\n                    date = \"Sept 2017 - Current\"\r\n                    details = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas id lectus a ex vehicula tempor at vel justo. Integer vitae leo libero. Sed vestibulum cursus posuere. Etiam suscipit, magna vel malesuada consequat, dolor felis aliquam velit, eu tempor erat orci eget dui. Aenean vitae interdum purus. Nam ut augue elit. Nullam diam sapien, rhoncus at vestibulum sed, luctus a erat.\"\r\n                />\r\n\r\n                <Work \r\n                    company = \"The Spacebar\"\r\n                    role = \"Bartender\"\r\n                    date = \"July 2015 - Sept 2017\"\r\n                    details = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas id lectus a ex vehicula tempor at vel justo. Integer vitae leo libero. Sed vestibulum cursus posuere. Etiam suscipit, magna vel malesuada consequat, dolor felis aliquam velit, eu tempor erat orci eget dui. Aenean vitae interdum purus. Nam ut augue elit. Nullam diam sapien, rhoncus at vestibulum sed, luctus a erat.\"\r\n                />\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default MainContent","import React from \"react\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>&copy;2020 Sally Student</footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\n\nimport Header from \"./components/Header\"\nimport MainContent from \"./components/MainContent\"\nimport Footer from \"./components/Footer\"\n\nfunction App() {\n    return(\n        <div>\n            <Header \n              name = \"Sally Student\"\n            />\n            <MainContent \n              name = \"Sally Student\"\n              email = \"sally@student.com\"\n              emailUrl = \"mailto:sally@student.com\"\n              number = \"555-555-5555\"\n              numberUrl = \"tel:555-555-5555\"\n\n            />\n            <Footer />\n        </div>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('application-root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}